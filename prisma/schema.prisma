// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId      String       @unique @default(cuid())
  username    String       @unique
  name        String
  password    String
  email       String       @unique
  createdAt   DateTime     @default(now())
  submissions Submission[]
  contests    Contest[]
}

model Problem {
  problemId   String     @unique @default(cuid())
  createdAt   DateTime   @default(now())
  contestId   String?
  title       String
  description String
  contest     Contest?   @relation(fields: [contestId], references: [contestId])
  difficulty  Difficulty
  points      Int?
}

model Submission {
  submissionId String           @unique @default(cuid())
  language     String
  problemId    String
  userId       String
  createdAt    DateTime         @default(now())
  code         String
  fullcode     String
  contestId    String?
  status       SubmissionResult @default(PENDING)
  contest      Contest?         @relation(fields: [contestId], references: [contestId])
  user         User             @relation(fields: [userId], references: [userId])
}

model Contest {
  contestId   String       @unique
  createdAt   DateTime     @default(now())
  startTime   DateTime?
  endTime     DateTime?
  hidden      Boolean      @default(true)
  description String?
  submissions Submission[]
  problems    Problem[]
  adminId     String
  admin       User         @relation(fields: [adminId], references: [userId])
}

enum SubmissionResult {
  AC
  FAILED
  PENDING
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}
